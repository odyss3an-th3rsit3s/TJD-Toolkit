# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python

permissions:
  contents: read

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - '**/*.py'
      - '**/requirements*.txt'
      - '**/setup.py'
      - '**/setup.cfg'
      - '**/pyproject.toml'
      - '**/Pipfile'
      - '**/Pipfile.lock'
      - '**/poetry.lock'
      - '**/environment.yml'
      - '**/environment.yaml'
      - '**/tox.ini'
      - '**/pytest.ini'
      - '**/.flake8'
      - '**/mypy.ini'
  pull_request:
    branches: [ "main", "develop" ]
    paths:
      - '**/*.py'
      - '**/requirements*.txt'
      - '**/setup.py'
      - '**/setup.cfg'
      - '**/pyproject.toml'
      - '**/Pipfile'
      - '**/Pipfile.lock'
      - '**/poetry.lock'
      - '**/environment.yml'
      - '**/environment.yaml'
      - '**/tox.ini'
      - '**/pytest.ini'
      - '**/.flake8'
      - '**/mypy.ini'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-in-project: true                      # puts the venv in .venv

      - name: Install dependencies
        run: poetry install --no-interaction --all-extras   # installs runtime + dev deps

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . \
            --exclude .venv \
            --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . \
            --exclude .venv \
            --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pytest