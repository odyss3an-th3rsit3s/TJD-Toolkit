[project]
name = "tjd-toolkit"
version = "0.1.0"
description = "A collection of simple tools for your digital toolbelt"
authors = [
    {name = "odyss3an-th3rsit3s", email = "199909392+odyss3an-th3rsit3s@users.noreply.github.com"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["toolkit", "utilities", "gui", "cross-platform", "automation"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Topic :: System :: Systems Administration"
]
dependencies = [
    "flet>=0.28.3",
    "psutil>=7.0.0"
]

[virtualenvs]
in-project = true

[project.urls]
Homepage = "https://github.com/odyss3an-th3rsit3s/TJD-Toolkit"
Repository = "https://github.com/odyss3an-th3rsit3s/TJD-Toolkit"
Issues = "https://github.com/odyss3an-th3rsit3s/TJD-Toolkit/issues"

[project.scripts]
tjd = "gui.main:main"
tjd-cli = "cmd.tjd.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1", 
    "pytest-mock>=3.14.1",
    "flake8>=7.2.0",
    "black>=25.1.0",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0"
]

[tool.poetry]
packages = [{include = "tools"}, {include = "gui"}, {include = "internal"}]

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=tools --cov=gui --cov=internal --cov-report=html --cov-report=term-missing"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".venv"]

[tool.coverage.run]
source = ["tools", "gui", "internal"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]
